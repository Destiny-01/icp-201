type Order = record {
  status : text;
  memo : nat64;
  productId : nat64;
  seller : text;
  price : nat64;
  paid_at_block : opt nat64;
};
type ProducPayload = record {
  attachmentURL : text;
  title : text;
  description : text;
  price : nat64;
  location : text;
};
type Product = record {
  id : nat64;
  attachmentURL : text;
  title : text;
  soldAmount : nat64;
  description : text;
  seller : text;
  price : nat64;
  location : text;
};
type Response = variant {
  id : nat64;
  order : Order;
  orders : vec vec Order;
  error : text;
  caller : text;
  products : vec Product;
  icpTransferResult : text;
  product : Product;
};
service : () -> {
  addProduct : (ProducPayload) -> (Response);
  completePurchase : (principal, nat64, nat64, nat64, nat64) -> (Response);
  createOrder : (nat64) -> (Response);
  deleteProduct : (nat64) -> (Response);
  getAddressFromPrincipal : (principal) -> (text) query;
  getOrders : () -> (Response) query;
  getProduct : (nat64) -> (Response) query;
  getProducts : () -> (Response) query;
  updateProduct : (Product) -> (Response);
  verifyPayment : (principal, nat64, nat64, nat64) -> (bool) query;
}